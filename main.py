import telebot
import requests

# –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –∏ API –∫–ª—é—á
TOKEN = '7174618825:AAH4yLxwA461rKfCUPc3ldCgj36-mRpCcJ4'
YANDEX_API_KEY = '395d583f-a699-4374-90f5-d7bc56fa299c'

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, –∏ —è –ø–æ–¥–±–µ—Ä—É –º–µ—Å—Ç–∞ —Ä—è–¥–æ–º.")

@bot.message_handler(content_types=['location'])
def handle_location(message):
    latitude = message.location.latitude
    longitude = message.location.longitude

    url = 'https://search-maps.yandex.ru/v1/'
    params = {
        'apikey': YANDEX_API_KEY,
        'text': '–µ–¥–∞',  # –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –ø–æ–¥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
        'lang': 'ru_RU',
        'll': f'{longitude},{latitude}',
        'type': 'biz',
        'results': 5
    }

    try:
        response = requests.get(url, params=params)
        print("STATUS:", response.status_code)
        print("RESPONSE TEXT:", response.text)

        if response.status_code != 200:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞: —Å—Ç–∞—Ç—É—Å {response.status_code}")
            return

        data = response.json()
        features = data.get('features', [])

        if not features:
            bot.send_message(message.chat.id, "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–æ—Å—å —Ä—è–¥–æ–º üò¢")
            return

        for feature in features:
            name = feature['properties']['CompanyMetaData']['name']
            address = feature['properties']['CompanyMetaData']['address']
            bot.send_message(message.chat.id, f"{name}\n{address}")

    except Exception as e:
        bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        print("–û–®–ò–ë–ö–ê:", e)

# –ó–∞–ø—É—Å–∫ polling –±–µ–∑ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
if __name__ == '__main__':
    try:
        bot.delete_webhook()
    except:
        pass
    bot.polling(none_stop=True)
