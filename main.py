import telebot
import requests

# üîê –í—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω Telegram
TELEGRAM_TOKEN = "7174618825:AAH4yLxwA461rKfCUPc3ldCgj36-mRpCcJ4"
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# üîë –í—Å—Ç–∞–≤—å —Å—é–¥–∞ API-–∫–ª—é—á –æ—Ç –Ø–Ω–¥–µ–∫—Å –ö–∞—Ä—Ç (Places API)
YANDEX_API_KEY = "395d583f-a699-4374-90f5-d7bc56fa299c"

# üì° –£–¥–∞–ª–µ–Ω–∏–µ Webhook (–∏–Ω–∞—á–µ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞ 409)
requests.get(f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/deleteWebhook")


@bot.message_handler(content_types=['text'])
def handle_text(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—é –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é, –∏ —è –ø–æ–¥—Å–∫–∞–∂—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–µ—Å—Ç–∞ —Ä—è–¥–æ–º.")


@bot.message_handler(content_types=['location'])
def handle_location(message):
    latitude = message.location.latitude
    longitude = message.location.longitude

    headers = {
        "Authorization": f"Api-Key {YANDEX_API_KEY}"
    }

    categories = ["cafe", "park", "museum"]  # —Ç–∏–ø—ã –∑–∞–≤–µ–¥–µ–Ω–∏–π
    results = []

    for category in categories:
        url = (
            f"https://search-maps.yandex.ru/v1/?text={category}&"
            f"ll={longitude},{latitude}&"
            f"spn=0.01,0.01&"
            f"results=3&type=biz&lang=ru_RU"
        )
        response = requests.get(url, headers=headers)

        try:
            places = response.json().get("features", [])
            for place in places:
                name = place["properties"]["CompanyMetaData"]["name"]
                address = place["properties"]["CompanyMetaData"].get("address", "–ê–¥—Ä–µ—Å –Ω–µ —É–∫–∞–∑–∞–Ω")
                results.append(f"üìç {name}\nüì´ {address}")
        except Exception as e:
            results.append(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")

    reply = "\n\n".join(results) if results else "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Ä—è–¥–æ–º."
    bot.send_message(message.chat.id, reply)


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.polling(none_stop=True)
